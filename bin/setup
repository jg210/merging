#!/bin/bash
#
# Copyright (c) 2019-2020 Jeremy Green.

set -o errexit
set -o nounset
set -o pipefail
set -o errtrace

source "$(dirname "$0")/.common.sh"
SOURCE_DIR="$(dirname "$0")/.."
cd "${SOURCE_DIR}"

rubyVersionExpected="$(cat "${SOURCE_DIR}/.ruby-version")"

circleCiConfig="${SOURCE_DIR}/.circleci/config.yml"
rubyVersionCircleCi=$(egrep '^ *- image: circleci/ruby:' "${circleCiConfig}" | cut -d: -f3- | egrep --only-matching '[^ ].*')
if [ "${rubyVersionExpected}" != "${rubyVersionCircleCi}" ] ; then
    log "ERROR: circle CI ruby version needs to be updated in ${circleCiConfig}"
    log "expected: ${rubyVersionExpected}"
    log "found: ${rubyVersionCircleCi}"
    exit 1
fi

if which rbenv > /dev/null 2> /dev/null ; then
    log "installing ruby ${rubyVersionExpected}"
    rbenv install "${rubyVersionExpected}" \
	  --skip-existing \
	  --verbose
else
    if [ "${CIRCLECI:-}" != "true" ] ; then
	cat <<EOF
You need to:

* Install rbenv: https://github.com/rbenv/rbenv#installation
* Install ruby-build as an rbenv plugin: https://github.com/rbenv/ruby-build#installation

...and re-run this script.

EOF
	exit 1
    fi
fi
. "${SOURCE_DIR}/environment"
gem install bundler --version 2.1.4
bundler install \
	--binstubs=.bin
rubyVersionActual="$(ruby -e 'puts RUBY_VERSION')"
if [ "${rubyVersionExpected}" != "${rubyVersionActual}" ] ; then
    log "ERROR: need ruby ${rubyVersionExpected} but have ruby ${rubyVersionActual}"
    exit 1
fi
