* Publishing fails with:

  [!] Google Api Error: Invalid request - APK has an invalid version code.

* Add privacy policy to play store.
  - change github pages to use release branch
  - https://firebase.google.com/docs/android/play-data-disclosure#crashlytics
  - https://support.google.com/analytics/answer/11582702

* Complete data safety form on play store.
  - need to do this after privacy policy.
  - get policy reviewed

* Use KSP not kapt for room.
  - https://developer.android.com/build/migrate-to-ksp

* NDK crash reporting

* Splashscreen has very large image on android-21 emulator.

* detect all faces, crop image and redetect each face's contours
  - can only detect one face if contour-detection enabled.
  - allowing merging of group of faces from one photo
  - probably required for accurate contour coordinate detection too.

* Use fingerprint of onboarding text not "version" in OnboardingActivity?
  - will need to change database schema since currently uses long

* Have seen three faces in LiveData message when there should be two.

* Is FacesView leaking anything?
  - https://proandroiddev.com/5-common-mistakes-when-using-architecture-components-403e9899f4cb

* App link gives "Item not found" error in play store app if android platform is too old.

* Image database has become corrupted:

2019-08-04 20:44:12.917 5264-5264/uk.me.jeremygreen.merging D/ImageFragment: updating image 0 with: file:///data/user/0/uk.me.jeremygreen.merging/files/photos/3b2ed863-133c-4ec5-8a10-c0ebe0e1cbce.jpg
2019-08-04 20:44:12.923 5264-5264/uk.me.jeremygreen.merging D/ImageFragment: updating image 0 with: file:///data/user/0/uk.me.jeremygreen.merging/files/photos/4db3e981-8725-454a-b8af-734f2f3746eb.jpg

2019-08-08 23:41:30.698 9106-9106/? D/FacesView: updating image 2131230833 with: file:///data/user/0/uk.me.jeremygreen.merging/files/photos/2a203507-73b4-498e-b010-c325ecedd673.jpg

* Better play store text etc.
  - short and long description shouldn't be the same.

* Further automate release process.
  - dry run of release jobs for all commits
  - add play store changelog
  - use same changelog for github release notes too.
  - git tag for each release
    - locally before pushing or from CI?
    - ...but something is already adding git tags - what?

* Google Play store console says, "your app is using an old version of the Google Play developer API".
  - https://android-developers.googleblog.com/2019/03/changes-to-google-play-developer-api.html
  - likely fastlane?
    - https://github.com/fastlane/fastlane/issues/14573

* Can google-services.json(s) be taken from merging-secrets repo?

* Use android app bundle.
  - upload signing key
  - create upload key
  - ???

* Play store accessibility checks say onboarding accept click area is still not high enough.
  - "This item's height is 38dp. Consider making the height of this touch target 48dp or larger."

* Refactor and refine face-detection implementation.
  - too much code in ImageFragment

* If wipe AVD data, camera app doesn't send photo back to app first time use it.

* ACTION_IMAGE_CAPTURE Intent might not work well on all platforms
  - https://commonsware.com/blog/2015/06/08/action-image-capture-fallacy.html

* Room sends two LiveData events when add faces rows
  - once without coordinates
  - once with
  => have had to remove change detection to the FacesView property observer
  - shouldn't use of transactions prevent this?

* ViewSlider2 position not persisted on rotation.
  - probably since ViewPager2 saves and restores it, but when restored, there are no images in the slider.
  - stop ViewPager2 persisting position itself and persist ViewPager2 id in ViewModel instead
    - observe LiveData<MainActivityState>
    - same problem is moved into code that sets up this LiveData
  - keep hold of restored state and use it for first images update?

* Screenshots in github.

* Android Studio says should replace SplashActivity with SplashScreen.
  - https://developer.android.com/develop/ui/views/launch/splash-screen is android 12 and above only
  - https://developer.android.com/reference/kotlin/androidx/core/splashscreen/SplashScreen works for
    older platforms too

* Don't show splashscreen if start up is fast enough
  - but if do show it, show it for at least 1.5s.

* Enable crashlytics and analytics in SplashActivity if previously enabled via OnboardingActivity.
  - currently, enable in MainActivity, which avoids need to persist state, but means
    early crashes not visible.

* Unit tests.
  - write some
  - run from test server

* Garbage collect files after delete them and UI has finished updating.
  - when ViewPager2 stops using them
    - https://developer.android.com/reference/android/support/v7/widget/RecyclerView.RecyclerListener.html?
  - on startup, in case app shuts down or crashes before can delete files
    - add database index for file column so can query if it is used
  - don't remove images that camera Intent has created but that aren't yet store in the db.

* Handle rejected permissions.

* Better appName.

* Include licence text in About screen.

* Image-deletion dialogue dismissed if rotate device.
  - use androidx DialogFragment?

* Toggleable overlay showing debug info.

* If possible, stop camera app asking for location permission.

* What happens if Camera app isn't given location permission?

* Test app on Firebase.
  - https://circleci.com/docs/2.0/language-android/#testing-with-firebase-test-lab

* Add more Firebase Analytics events.
  - https://firebase.google.com/docs/analytics/android/start
  - image add
  - image delete

* Choose colour scheme for app.
  - current scheme gives low-contrast warnings in the pre-launch report.

* Material design
  - implementation 'com.google.android.material:material:1.0.0'
  - don't misuse dark/light primary color resources
  - Floating Action Button should be in fixed position and fade in/out of view as swipe (if remove it from merged image screen)
  - animate the FAB as switch activities.

* GDPR.

* Automated licence report.
  - listed by licence type.
  - jk1?

* Better play-store screenshots.

* CircleCI has too many minor issues
  - no per-branch env. vars.
  - artifacts tab not always shown
    - https://discuss.circleci.com/t/stored-artifacts-not-showing-up-on-a-build/20761/3

* Replace Room with something better?
  - Realm?

* Is it necessary to wait for MLKit model to download when necessary
    - https://firebase.google.com/docs/ml-kit/android/detect-faces#before-you-begin
    - how?
    - is having manifest config. sufficient?
    - https://github.com/firebase/quickstart-android/issues/586
      - for custom image recognition models, not face detection

* Remove background before merging
  - https://developers.google.com/ml-kit/vision/selfie-segmentation

* Use androidx.palette to ensure image overlay visible?
  - dev/image_overlay_palette

* Configure android lint
  - tune priorities.
  - make CircleCI fail, if it doesn't already.

* kotlin doesn't use java-style capitalization for CONSTANTS.

* Does idiomatic kotlin use underscores_in_automatic_view_fields?

* Why wasn't it possible to get coroutine scope like this?
  - https://developer.android.com/topic/libraries/architecture/coroutines#lifecyclescope
  - had to implement CoroutineScope in ImageFragment instead, which is OK, but not as clear

* Explain need INTERNET permission for model download, crashlytics and analytics in play-store app blurb.

* Coherent naming scheme for resource ids.

* Better structure for java packages.

* Move features in this list to github issues.

* Spotbugs.

* "API 'variant.getMergeResources()' is obsolete" gradle sync warning.

* AndroidManifest says app supports RTL.
  - is that correct?

* Allow app's data to be backed up.
  - set allowBackup="true"
  - android lint says need to exclude "GCM id" since can't be reused

* Make forks build on Circle CI?
  - dummy google-services.json?

* Try https://developer.android.com/training/camerax when its out of beta.

* ML Kit might need image orientation to be set
  - https://developers.google.com/ml-kit/vision/face-detection/android#using-a-media.image

* Add "Developer page" for app on google play console.
