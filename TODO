* Fragment recycling in ViewPager is causing flaky UI when delete images.
  - not always reproducible
  - files seem to be managed correctly
  - wrong images shown sometimes until restart
  - can ViewPager be replaced?
    - RecyclerView + PageSnapHelper + LinearLayoutManager
      - https://developer.android.com/reference/android/support/v7/widget/RecyclerView.html
      - https://developer.android.com/reference/android/support/v7/widget/PagerSnapHelper
      - https://developer.android.com/reference/android/support/v7/util/DiffUtil
      - https://proandroiddev.com/looks-like-a-viewpager-sounds-like-a-viewpager-its-a-recyclerview-505cdf129b58
      - RecyclerView is much more general purpose than ViewPager, but PageSnapHelper should make
        it relatively easy to use it as ViewPager replacement.
     - ViewPager2
       - https://developer.android.com/reference/androidx/viewpager2/widget/ViewPager2
       - not stable yet
         - https://developer.android.com/jetpack/androidx/releases/viewpager2
       - can use it with Fragments
         - https://developer.android.com/reference/androidx/viewpager2/adapter/FragmentStateAdapter
       - https://medium.com/google-developer-experts/exploring-the-view-pager-2-86dbce06ff71
       - based on RecyclerView

* MLKit?
  - configure to start download of model at install time
  - wait for model to download when necessary
    - after first need model
  - will need INTERNET permission for model download
  - use appropriately-sized images for feature recognition
  - would need something else for image processing.

* opencv?

* Full landscape/portrait support.

* Show merged photo.

* Better unit tests.

* If wipe AVD data and deny location permission, then camera app doesn't send photo back to app.

* Handle app rejected permissions.

* Replace launcher icons.
  - Rubin's vase.

* Better app_name.

* Toggleable overlay showing debug info.

* If possible, stop camera app asking for location permission.

* What happens if Camera app isn't given location permission?

* Save apk as artifact on CircleCI.

* Test app on Firebase.
  - https://circleci.com/docs/2.0/language-android/#testing-with-firebase-test-lab

* Configure android lint
  - tune priorities.
  - make CircleCI fail.

* Spotbugs.

* Show licence texts.
  - extra ViewPager screen would be simplest
  - https://github.com/hierynomus/license-gradle-plugin
  - https://github.com/cookpad/license-tools-plugin
  - https://plugins.gradle.org/search?term=license

* Publish to store.

* Firebase analytics.

* Crash reporting tool.

* Return FragmentStatePagerAdapter.POSITION_UNCHANGED from PagerAdapter in more cases.
  - for better performance when delete photo
  - keep Fragments in sparse ArrayList
  - find length of common prefix of old and new List<File>
  - only keep this many Fragments in the ArrayList

* Persistent ViewPager state.
  - persists across rotations etc., but not full restarts.
